name: faaskeeper

on:
  workflow_dispatch:
  push:

jobs:
  build:

    #runs-on: ubuntu-latest
    runs-on: self-hosted
    strategy:
      matrix:
         python-version: [3.7]
         user-storage: [key-value, persistent]
         queue: [sqs]
         channel: [tcp, sqs]
         cloud-provider: [aws]
         #python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          ./install.py --without-client-library
      - name: Install FaaSKeeper client library
        run: |
          source python-venv/bin/activate && pip install git+https://${{secrets.GH_ACCESS_TOKEN}}@github.com/mcopik/faaskeeper-python.git --upgrade
      - name: Lint with flake8
        run: |
          source python-venv/bin/activate && tools/linting.py functions
          source python-venv/bin/activate && tools/linting.py tests
      - name: Deploy service
        run: |
          source python-venv/bin/activate && ./fk.py deploy service tests/${TEST_CASE}_final.json --provider ${{matrix.cloud-provider}} --clean --config tests/${TEST_CASE}.json
        env:
          TEST_CASE: ${{matrix.cloud-provider}}_${{matrix.user-storage}}_${{matrix.queue}}_${{matrix.channel}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          GITHUB_ACCESS_TOKEN: ${{secrets.GH_ACCESS_TOKEN}}
      - name: Set testing configuration
        run: |
          echo 'TEST_USER_STORAGE='${{ matrix.user-storage }} >> $GITHUB_ENV
          echo 'TEST_CLOUD_PROVIDER='${{ matrix.cloud-provider }} >> $GITHUB_ENV
          echo 'TEST_CONFIGURATION_JSON=tests/'${{matrix.cloud-provider}}_${{matrix.user-storage}}_${{matrix.queue}}_${{matrix.channel}}_final.json >> $GITHUB_ENV
      - name: Test with pytest
        run: |
          source python-venv/bin/activate && sleep 60 && pytest tests/*.py
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
